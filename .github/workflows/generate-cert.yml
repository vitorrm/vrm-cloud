name: Generate Certicate
on:
  workflow_dispatch:
env:
  ADMIN_EMAIL: ${{ vars.ADMIN_EMAIL }}
  DOMAIN: ${{ vars.DOMAIN }}
  SUBDOMAINS: ${{ vars.SUBDOMAINS }}
  DUCKDNS_TOKEN: ${{ secrets.DUCKDNS_TOKEN }}
  OCI_CLI_REGION: ${{ vars.OCI_REGION }}
  OCI_CLI_TENANCY: ${{ secrets.OCI_TENANCY_OCID }}
  OCI_CLI_USER: ${{ secrets.OCI_USER_OCID }}
  OCI_COMPARTMENT_ID: ${{ secrets.OCI_COMPARTMENT_ID }}
  OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_PRIVATE_KEY }}
  OCI_CLI_FINGERPRINT: ${{ vars.OCI_FINGERPRINT }}
  OCI_VAULT_ID: ${{ vars.OCI_VAULT_ID }}
  OCI_KMS_SSL_KEY_ID: ${{ vars.OCI_KMS_SSL_KEY_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate Certificate with acme.sh
        run: ./scripts/generate-cert.sh

      - name: Check if the private key for cert secret exists
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        id: find-secret-privkey
        with:
          silent: false
          command: 'vault secret list --name cert-domain-privkey --compartment-id ${{ env.OCI_COMPARTMENT_ID }} --limit 1'
          query: "data[0].id"

      - name: Create secret for private key for cert 
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        if: steps.find-secret-privkey.outputs.raw_output == ''
        id: create-secret-privkey
        with:
          silent: false
          command: 'vault secret create-base64 --secret-name cert-domain-privkey --secret-content-content ${{ env.BASE64_PRIVKEY }} --compartment-id ${{ secrets.OCI_COMPARTMENT_ID }} --vault-id ${{ env.OCI_VAULT_ID }} --key-id ${{ env.OCI_KMS_SSL_KEY_ID }}'

      - name: Update secret for private key for cert 
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        if: steps.find-secret-privkey.outputs.raw_output != ''
        id: update-secret-privkey
        with:
          silent: false
          command: 'vault secret update-base64 --secret-id ${{ steps.find-secret-privkey.outputs.raw_output }} --secret-content-content ${{ env.BASE64_PRIVKEY }} --force'

      # - name: Check if the ca cert secret exists
      #   uses: oracle-actions/run-oci-cli-command@v1.3.2
      #   id: find-secret-ca
      #   with:
      #     command: 'vault secret list --name cert-domain-ca --compartment-id ${{ secrets.OCI_COMPARTMENT_ID }}'
      #     query: "data[0].id"

      # - name: Check if the fullchain secret exists
      #   uses: oracle-actions/run-oci-cli-command@v1.3.2
      #   id: find-secret-fullchain
      #   with:
      #     command: 'vault secret list --name cert-domain-fullchain --compartment-id ${{ secrets.OCI_COMPARTMENT_ID }}'
      #     query: "data[0].id"

