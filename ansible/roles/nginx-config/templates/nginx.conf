user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$http_x_forwarded_for - $remote_user [$time_local] "$host" "$request" '
            '$status $body_bytes_sent "$http_referer" '
            '"$http_user_agent" $request_time"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;


    # If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
    # server port the client connected to
    map $http_x_forwarded_port $proxy_x_forwarded_port {
        default $http_x_forwarded_port;
        '' $server_port;
    }


    # If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
    # scheme used to connect to this server
    map $http_x_forwarded_proto $proxy_x_forwarded_proto {
        default $http_x_forwarded_proto;
        '' $scheme;
    }

    # Set appropriate X-Forwarded-Ssl header based on $proxy_x_forwarded_proto
    map $proxy_x_forwarded_proto $proxy_x_forwarded_ssl {
        default off;
        https on;
    }

    map $http_x_forwarded_host $proxy_x_forwarded_host {
        default $http_x_forwarded_host;
        '' $host;
    }

    map $http_upgrade $connection_upgrade {  
        default upgrade;
        ''      close;
    }

    map $http_upgrade $proxy_connection {
        default upgrade;
        '' $proxy_connection_noupgrade;
    }

    map $upstream_keepalive $proxy_connection_noupgrade {
        # Preserve nginx's default behavior (send "Connection: close").
        default close;
        # Use an empty string to cancel nginx's default behavior.
        true '';
    }

    # Abuse the map directive (see <https://stackoverflow.com/q/14433309>) to ensure
    # that $upstream_keepalive is always defined.  This is necessary because:
    #   - The $proxy_connection variable is indirectly derived from
    #     $upstream_keepalive, so $upstream_keepalive must be defined whenever
    #     $proxy_connection is resolved.
    #   - The $proxy_connection variable is used in a proxy_set_header directive in
    #     the http block, so it is always fully resolved for every request -- even
    #     those where proxy_pass is not used (e.g., unknown virtual host).
    map "" $upstream_keepalive {
        # The value here should not matter because it should always be overridden in
        # a location block (see the "location" template) for all requests where the
        # value actually matters.
        default false;
    }

    # Include the port in the Host header sent to the container if it is non-standard
    map $server_port $host_port {
        default :$server_port;
        80 '';
        443 '';
    }

    include /etc/nginx/conf.d/*.conf;
}